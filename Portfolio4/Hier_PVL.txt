model{
  
  mu_w ~ dnorm(0,0.1)T(0,)
  mu_A ~ dnorm(0,1)
  mu_theta ~ dnorm(0,1)T(0,)
  mu_a ~ dnorm(0,1)T(0,1)
  
  l_w ~ dgamma(.01,.01)
  l_A ~ dgamma(.01,.01)
  l_theta ~ dgamma(.01,.01)
  l_a ~ dgamma(.01,.01)
  
  
  for (s in 1:nsubs){
    
    w[s] ~ dnorm(mu_w, l_w)T(0,)
    A[s] ~ dnorm(mu_A, l_A)
    theta[s] ~ dnorm(mu_theta, l_theta)T(0,)
    a[s] ~ dnorm(mu_a, l_a)T(0,1)
    
    Ev[s,1,1] <- 0 
    Ev[s,1,2] <- 0 
    Ev[s,1,3] <- 0 
    Ev[s,1,4] <- 0 
    
    for (t in 2:ntrials_all[s]){
      
      for (d in 1:4){
        u[s,t,d] <- ifelse(r[s,t-1] < 0, -w[s]*(abs(r[s,t-1]))^A[s], (abs(r[s,t-1]))^A[s])
        
        Ev_update[s,t,d] <- Ev[s,t-1,d]+ a[s]*(u[s,t,d] - Ev[s,t-1,d])
        
        Ev[s,t,d] <- ifelse(d == x[s,t-1], Ev_update[s,t,d], Ev[s,t-1,d])
        
        exp_p[s,t,d] <- exp(theta[s]*Ev[s,t,d])
      }
      
      for (d in 1:4){
        
        p[s,t,d] <- exp_p[s,t,d]/sum(exp_p[s,t,])
        
      }
      
      x[s,t] ~ dcat(p[s,t,])
    }
  }
}
