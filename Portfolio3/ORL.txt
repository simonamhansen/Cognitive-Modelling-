model{

  Arew ~ dnorm(0.5, 1)T(0,1)
  Apun ~ dnorm(0.5, 1)T(0,1)
  K ~ dunif(0, 5)
  wp ~ dnorm(0, .1)
  wf ~ dnorm(0, .1)
  
  Ev[1,1] = 0
  Ev[1,2] = 0
  Ev[1,3] = 0
  Ev[1,4] = 0

  Ef[1,1] = 0
  Ef[1,2] = 0
  Ef[1,3] = 0
  Ef[1,4] = 0
  
  PS[1,1] = 0
  PS[1,2] = 0
  PS[1,3] = 0
  PS[1,4] = 0
  
  p[1,1] <- 0.25
  p[1,2] <- 0.25
  p[1,3] <- 0.25
  p[1,4] <- 0.25
  
  for (t in 2:ntrials){
    signX[t] <- ifelse(r[t-1]==0, 0, ifelse(r[t-1]<0, -1, 1)) 
    for (d in 1:4){
      
      Ev_update[t,d] <- ifelse(r[t-1] >= 0, Ev[t-1,d]+ Arew*(r[t-1] - Ev[t-1,d]), Ev[t-1,d]+ Apun*(r[t-1] - Ev[t-1,d]))
      
      Ev[t,d] <- ifelse(x[t-1] ==d, Ev_update[t,d], Ev[t-1,d])
      
      Ef_chosen[t,d] <- ifelse(r[t-1] >= 0, Ef[t-1,d]+ Arew*(signX[t] - Ef[t-1,d]), Ef[t-1,d]+ Apun*(signX[t] - Ef[t-1,d]))
      
      Ef_notchosen[t,d] <- ifelse(r[t-1] >= 0, Ef[t-1,d]+ Arew*((-signX[t])/3 - Ef[t-1,d]), Ef[t-1,d]+ Apun*((-signX[t])/3 - Ef[t-1,d])) 
      
      Ef[t,d] <- ifelse(x[t-1] ==d, Ef_chosen[t,d], Ef_notchosen[t,d])
      
      PS[t,d] <- ifelse(x[t-1] ==d, 1/(1+K), PS[t-1,d]/(1+K))
      
      v[t,d] <- Ev[t,d] + wf*Ef[t,d] + wp*PS[t,d]
      
      exp_p[t,d] <- exp(1*v[t,d])
      
    }
    
    for (d in 1:4){
      
      p[t,d] <- exp_p[t,d]/sum(exp_p[t,])
      
    }
    x[t] ~ dcat(p[t,])
  }
}